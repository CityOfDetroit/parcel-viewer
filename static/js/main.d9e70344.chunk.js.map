{"version":3,"sources":["img/logo.png","components/HeaderButton.js","components/AddressSearch.js","components/SectionH3.js","components/DetailsTable.js","components/Details.js","components/Header.js","components/Introduction.js","components/MapHeader.js","components/Map.js","components/StreetView.js","components/SVToggle.js","ParcelExplorer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","HeaderButton","icon","onClick","className","active","AddressSearch","setCoords","setSearch","setParcel","useState","dataSource","setDataSource","value","setValue","hasFocus","setHasFocus","searchField","setSearchField","handleSearch","fetch","then","r","json","d","suggestions","length","text","map","s","suggestAddress","console","log","onChange","e","target","onKeyDown","keyCode","url","candidates","attributes","location","onSearchSelect","onFocus","onBlur","faWindowClose","faExchangeAlt","SectionH3","children","DetailsTable","parcelData","mobile","taxpayer_1","taxpayer_2","taxpayer_street","taxpayer_city","taxpayer_state","sale_date","moment","format","parseInt","sale_price","toLocaleString","homestead_pre","nez","property_class","property_class_desc","use_code","use_code_desc","zoning","num_bldgs","total_floor_area","style","tax_status","assessed_value","taxable_value","total_acreage","total_square_footage","depth","frontage","legal_description","Details","parcel","setParcelData","setLoadScreen","useEffect","params","outFields","outSR","f","where","queryString","Object","keys","k","encodeURIComponent","join","fetchData","response","geojson","parse","features","geometry","coordinates","centroid","coords","y","x","parcel_number","address","Header","showSearch","showInfo","setInfo","src","logo","faInfoCircle","faSearch","IntroPara","Introduction","faMapMarked","faStreetView","faCalendarAlt","href","MapTitle","MapTitleSection","Map","width","height","svCoords","svBearing","theMap","setTheMap","history","useHistory","mapboxgl","container","mapStyle","center","zoom","resize","on","addLayer","id","type","source","data","layout","loadImage","error","image","addImage","setLayoutProperty","minzoom","visibility","paint","stops","base","filter","interactive","addLayers","queryRenderedFeatures","point","layers","properties","parcelno","push","setFilter","panTo","getSource","setData","lon","lat","bearing","clientid","fetchImageKey","lnglat","lng","markerStyle","ballColor","ballOpacity","color","opacity","radius","StreetView","setSvBearing","setSvCoords","mapillary","setMapillary","loading","setLoading","currentCoords","setCurrentCoords","currentKey","setCurrentKey","imageKeys","setImageKeys","mapillaryView","Mapillary","component","cover","marker","sequence","cache","attribution","n","latLon","b","sequences","forEach","ik","captured_at","slice","indexOf","sorted","sort","a","moveToKey","key","node","mly","start","end","fullPano","nodeBearing","computedCA","desiredBearing","min","max","interval","wrap","bearingToBasic","setCenter","setBearing","defaultMarker","SimpleMarker","getComponent","add","i","SVToggle","setMap","ParcelExplorer","pid","useParams","window","innerWidth","setWidth","innerHeight","setHeight","setMobile","basemap","handleWindowResize","addEventListener","removeEventListener","App","basename","path","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d9e70344.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.c5600d7e.png\";","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React from \"react\";\n\nexport const HeaderButton = ({ icon, onClick, className, active=false }) => (\n  <button className={`text-lg hover:bg-gray-400 py-2 px-3 rounded inline-flex items-center ${className}`} onClick={onClick}>\n    <FontAwesomeIcon icon={icon} className={`text-sm ${active ? \"text-gray-800\" : \"text-gray-600\"}`} />\n  </button>\n);\n","import { faExchangeAlt, faSearch, faWindowClose } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React, { useState } from \"react\";\n\nimport { HeaderButton } from \"./HeaderButton\";\n\nfunction AddressSearch({ setCoords, setSearch, setParcel }) {\n  const [dataSource, setDataSource] = useState([]);\n  const [value, setValue] = useState(\"\");\n  const [hasFocus, setHasFocus] = useState(false);\n  const [searchField, setSearchField] = useState(\"address\");\n\n  const suggestAddress = (value) => {\n    if (value !== \"\") {\n      fetch(`https://gis.detroitmi.gov/arcgis/rest/services/DoIT/AddressPointGeocoder/GeocodeServer/suggest?text=${value}&f=pjson`)\n        .then((r) => r.json())\n        .then((d) => {\n          d.suggestions.length < 1 ? setDataSource({ text: value }) : setDataSource(d.suggestions.map((s) => s.text));\n        });\n    }\n  };\n\n  const handleSearch = (value) => {\n    suggestAddress(value);\n    setValue(value);\n    console.log(dataSource)\n  };\n\n  const onSearchSelect = (value) => {\n    const url = `https://gis.detroitmi.gov/arcgis/rest/services/DoIT/CompositeGeocoder/GeocodeServer/findAddressCandidates?SingleLine=${value}&outSR=4326&outFields=*&f=pjson`;\n    fetch(url)\n      .then((r) => r.json())\n      .then((d) => {\n        if (d.candidates.length > 0) {\n          let { attributes, location } = d.candidates[0];\n          if (attributes[\"User_fld\"]) {\n            setParcel(attributes[\"User_fld\"]);\n          } else {\n            console.log(\"not found!\");\n            setParcel(null);\n          }\n          setCoords(location);\n        }\n      });\n  };\n\n  return (\n    <section className={`address-search py-2 px-2 bg-det-gray rounded w-full text-gray-${hasFocus ? 900 : 600}`}>\n\n      <div className=\"flex items-center\">\n        <input\n          className=\"bg-white focus:outline-none font-lg p-1 focus:shadow-outline border border-gray-300 rounded-lg block w-full appearance-none leading-normal\"\n          onChange={(e) => (searchField === \"address\" ? handleSearch(e.target.value) : setParcel(null))}\n          onKeyDown={(e) => e.keyCode === 13 && (searchField === \"address\" ? onSearchSelect(value) : setParcel(e.target.value))}\n          onFocus={(e) => {\n            console.log(e);\n            setHasFocus(true);\n          }}\n          onBlur={(e) => {\n            console.log(e);\n            setHasFocus(false);\n          }}\n        ></input>\n                <HeaderButton\n          icon={faWindowClose}\n          onClick={() => { setSearch(false)\n          \n          }}\n          className=\"ml-2\"\n          />\n      </div>\n      <div className=\"flex items-center justify-between\">\n        <div className=\"flex items-center\">\n\n        <label className={`inline-block text-sm flex items-center`}>\n          Search by {searchField}\n        </label>\n        <HeaderButton\n          icon={faExchangeAlt}\n          onClick={() => {\n            searchField === \"address\" ? setSearchField(\"parcel ID\") : setSearchField(\"address\");\n          }}\n          className=\"ml-2\"\n          />\n          </div>\n\n      </div>\n    </section>\n  );\n}\n\nexport default AddressSearch;\n","import React from \"react\";\n\nconst SectionH3 = ({ children }) => {\n  return <h3 className=\"font-normal\">{children}</h3>;\n};\n\nexport default SectionH3;\n","import moment from \"moment\";\nimport React from \"react\";\n\nimport SectionH3 from \"./SectionH3\";\n\nfunction DetailsTable({ parcelData, mobile }) {\n  let d = parcelData;\n\n  return (\n    <section className=\"w-full overflow-y-auto px-1 details-table\">\n      <section className=\"details-section\">\n        <SectionH3>Ownership</SectionH3>\n        <table className=\"parcel-details\">\n          <tbody>\n            <tr>\n              <td>Taxpayer</td>\n              <td>{d.taxpayer_1}</td>\n            </tr>\n            {d.taxpayer_2 && (\n              <tr>\n                <td>Taxpayer (extended)</td>\n                <td>{d.taxpayer_2}</td>\n              </tr>\n            )}\n            <tr>\n              <td>Taxpayer Address</td>\n              <td>{`${d.taxpayer_street}, ${d.taxpayer_city}, ${d.taxpayer_state}`}</td>\n            </tr>\n            {d.sale_date && (\n              <tr>\n                <td>Last Sale Date</td>\n                <td>{moment(d.sale_date).format(\"LL\")}</td>\n              </tr>\n            )}\n            {d.sale_date && (\n              <tr>\n                <td>Last Sale Price</td>\n                <td>{`$${parseInt(d.sale_price).toLocaleString()}`}</td>\n              </tr>\n            )}\n            <tr>\n              <td>PRE %</td>\n              <td>{d.homestead_pre}</td>\n            </tr>\n            {d.nez && (\n              <tr>\n                <td>NEZ</td>\n                <td>{d.nez}</td>\n              </tr>\n            )}\n          </tbody>\n        </table>\n      </section>\n      <section className=\"details-section\">\n        <SectionH3>Usage & classification</SectionH3>\n        <table className=\"parcel-details\">\n          <tbody>\n            {/* <tr>\n              <td>\n                Improved?\n              </td>\n              <td>\n                {d.is_improved === 1 ? `Yes` : `No`}\n              </td>\n            </tr> */}\n            <tr>\n              <td>Property Class</td>\n              <td>\n                {d.property_class} - {d.property_class_desc}\n              </td>\n            </tr>\n            <tr>\n              <td>Property Use</td>\n              <td>\n                {d.use_code} - {d.use_code_desc}\n              </td>\n            </tr>\n            <tr>\n              <td>Zoning</td>\n              <td>{d.zoning}</td>\n            </tr>\n            <tr>\n              <td># of Buildings</td>\n              <td>{d.num_bldgs}</td>\n            </tr>\n            {d.total_floor_area && (\n              <tr>\n                <td>Total Floor Area (sf)</td>\n                <td>{d.total_floor_area}</td>\n              </tr>\n            )}\n            {d.style && (\n              <tr>\n                <td>Style</td>\n                <td>{d.style}</td>\n              </tr>\n            )}\n          </tbody>\n        </table>\n      </section>\n      <section className=\"details-section\">\n        <SectionH3>Taxation</SectionH3>\n        <table className=\"parcel-details\">\n          <tbody>\n            <tr>\n              <td>Tax Status</td>\n              <td>{d.tax_status}</td>\n            </tr>\n            <tr>\n              <td>Assessed Value</td>\n              <td>{`$${parseInt(d.assessed_value).toLocaleString()}`}</td>\n            </tr>\n            <tr>\n              <td>Taxable Value</td>\n              <td>{`$${parseInt(d.taxable_value).toLocaleString()}`}</td>\n            </tr>\n          </tbody>\n        </table>\n      </section>\n      <section className=\"details-section\">\n        <SectionH3>Dimensions</SectionH3>\n        <table className=\"parcel-details\">\n          <tbody>\n            <tr>\n              <td>Total Acreage</td>\n              <td>{d.total_acreage} ac</td>\n            </tr>\n            <tr>\n              <td>Total Square Footage</td>\n              <td>{d.total_square_footage} sf</td>\n            </tr>\n            <tr>\n              <td>Depth x Frontage (ft)</td>\n              <td>\n                {d.depth} x {d.frontage}\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </section>\n      <section className=\"details-section\">\n        <SectionH3>Legal description</SectionH3>\n        <p className=\"mt-2 max-w-8 bg-det-gray px-4 py-2 font-mono text-sm leading-4\">{d.legal_description}</p>\n      </section>\n    </section>\n  );\n}\n\nexport default DetailsTable;\n","import centroid from \"@turf/centroid\";\nimport React, { useEffect, useState } from \"react\";\nimport { convert, parse } from \"terraformer-arcgis-parser\";\n\nimport DetailsTable from \"./DetailsTable\";\nimport SectionH3 from \"./SectionH3\";\n\nconst Details = ({ parcel, setCoords, mobile, children }) => {\n  let [parcelData, setParcelData] = useState(null);\n  const [loadScreen, setLoadScreen] = useState(false);\n\n  // function to fetch data; returns a fetch Promise\n  const fetchData = (parcel) => {\n    // object to hold URL query string parameters\n    let params = {\n      outFields: \"*\",\n      outSR: 4326,\n      f: \"json\",\n      where: `parcel_number='${parcel}'`,\n    };\n\n    // service URL for parcel layer\n    let url = `https://gis.detroitmi.gov/arcgis/rest/services/OpenData/Parcels/FeatureServer/0/query?`;\n\n    // loop through params keys, make URI encoded string, join with &s\n    let queryString = Object.keys(params)\n      .map((k) => `${k}=${encodeURIComponent(params[k])}`)\n      .join(\"&\");\n\n    return fetch(url + queryString);\n  };\n\n  useEffect(() => {\n    setLoadScreen(true);\n    fetchData(parcel)\n      .then((response) => response.json())\n      .then((d) => {\n        console.log(d);\n        let geojson = parse(d.features[0].geometry);\n        let coordinates = centroid(geojson).geometry.coordinates;\n        let coords = {\n          y: coordinates[1],\n          x: coordinates[0],\n        };\n        setCoords(coords);\n        console.log(\"Selected parcel: \", d.features[0]);\n        setParcelData(d.features[0]);\n        setLoadScreen(false);\n      });\n  }, [parcel]);\n\n  return (\n    <section className={`details m-1`}>\n      {parcelData ? (\n        <>\n          <div>\n            <table className=\"bg-det-gray mb-1\">\n              <thead>\n                <tr className=\"\">\n                  <td>Parcel ID: {parcelData.attributes.parcel_number}</td>\n                  <td>\n                    Address: <b>{parcelData.attributes.address}</b>\n                  </td>\n                </tr>\n              </thead>\n            </table>\n          </div>\n          <DetailsTable parcelData={parcelData.attributes} mobile={mobile} />\n        </>\n      ) : (\n        <>{children}</>\n      )}\n    </section>\n  );\n};\n\nexport default Details;\n","import React from \"react\";\n\nimport logo from \"../img/logo.png\";\nimport {HeaderButton} from './HeaderButton';\nimport { faInfoCircle, faSearch } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Header = ({ showSearch, setSearch, showInfo, setInfo, mobile, children }) => {\n  return (\n    <header className=\"mx-1 mb-1\">\n      {!mobile &&\n      <>\n        <div className=\"flex items-center\">\n          <img src={logo} className=\"h-12\" />\n          <h1 className=\"text-xl w-full ml-2\">Parcel Viewer</h1>\n        </div>\n        <div className=\"flex items-center justify-end mb-1\">\n          <HeaderButton icon={faInfoCircle} active={showInfo} onClick={() => {setInfo(!showInfo)}}/>\n          <HeaderButton icon={faSearch} active={showSearch} onClick={() => {setSearch(!showSearch)}}/>\n        </div>\n        </>\n      }\n      {mobile &&\n        <div className=\"flex items-center mr-3\">\n          <img src={logo} className=\"h-12\" />\n          <h1 className=\"text-xl w-full mx-2\">Parcel Viewer</h1>\n          <HeaderButton icon={faInfoCircle} active={showInfo} onClick={() => {setInfo(!showInfo)}}/>\n          <HeaderButton icon={faSearch} active={showSearch} onClick={() => {setSearch(!showSearch)}}/>\n        </div>\n      }\n      <section className=\"pl-1 panels-area\">\n        {children}\n      </section>\n    </header>\n  );\n};\nexport default Header;\n","import { faCalendarAlt, faMapMarked, faStreetView, faWindowClose } from \"@fortawesome/free-solid-svg-icons\";\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React from \"react\";\n\nimport { HeaderButton } from \"./HeaderButton\";\nimport SectionH3 from \"./SectionH3\";\n\nconst IntroPara = ({ children }) => {\n  return <p className=\"py-2 text-sm\">{children}</p>;\n};\n\nconst Introduction = ({ setInfo, showInfo }) => {\n  return (\n    <section className=\"details introduction px-2 py-2 bg-det-gray bg-opacity-50 rounded overflow-y-auto\">\n      <div className=\"flex items-center align-top justify-between\">\n        <h1 className=\"text-lg\">Welcome to the new Parcel Viewer</h1>\n        <HeaderButton\n          icon={faWindowClose}\n          onClick={() => {\n            setInfo(!showInfo)\n          }}\n        />\n      </div>\n      <IntroPara>You can use this application to look up information about parcels in the City of Detroit.</IntroPara>\n      <IntroPara>You can find information about parcels in two ways:</IntroPara>\n      <ul className=\"list-disc list-inside ml-2 py-2 text-sm\">\n        <li>\n          <b>Search</b>\n          <FontAwesomeIcon icon={faSearch} className=\"mx-2\" />\n          for an address or parcel ID using the search box above\n        </li>\n        <li>\n          Click a parcel on the <b>map</b>\n          <FontAwesomeIcon icon={faMapMarked} className=\"mx-2\" />\n        </li>\n      </ul>\n      <IntroPara>\n        You can see the latest <b>Street View</b>\n        <FontAwesomeIcon icon={faStreetView} className=\"mx-2\" />\n        imagery for the parcel you selected:\n      </IntroPara>\n      <ul className=\"list-disc list-inside ml-2 py-2 text-sm\">\n        <li>\n          On a phone or tablet, tap the icon to switch between <b>map</b>\n          <FontAwesomeIcon icon={faMapMarked} className=\"mx-2\" />\n          or{\" \"}\n          <b>\n            street view\n            <FontAwesomeIcon icon={faStreetView} className=\"mx-2\" />\n          </b>\n        </li>\n        <li>\n          Switch between different imagery <b>capture dates</b>\n          <FontAwesomeIcon icon={faCalendarAlt} className=\"mx-2\" />\n          using the date picker\n        </li>\n      </ul>\n      <IntroPara>Do you have questions or comments about this tool? Tell us using our <a href=\"https://airtable.com/shrInZsfyRoJvq8GJ\" className=\"underline text-gray-700 hover:text-blue-600\">feedback form</a> or please open a <a href=\"https://github.com/CityOfDetroit/parcel-viewer/issues\" className=\"underline text-gray-700 hover:text-blue-600\">GitHub issue</a>.</IntroPara>\n    </section>\n  );\n};\n\nexport default Introduction;\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React from \"react\";\n\nconst MapTitle = ({ icon, children }) => (\n  <div className=\"flex items-center mr-2\">\n    <FontAwesomeIcon icon={icon} className=\"mx-2 text-md\" />\n    <h2 className=\"border-none font-light text-md\">{children}</h2>\n  </div>\n);\n\nconst MapTitleSection = ({ children }) => (\n  <div className=\"bg-det-light-green flex items-center py-1 px-1 justify-between z-40 absolute w-full leading-none\">{children}</div>\n);\n\nexport { MapTitleSection, MapTitle };\n","import { faExchangeAlt, faMapMarked } from \"@fortawesome/free-solid-svg-icons\";\nimport mapboxgl from \"mapbox-gl\";\nimport React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport mapStyle from '../style.json'\n\nimport { MapTitle, MapTitleSection } from \"./MapHeader\";\n\nconst addLayers = (map) => {\n\n  // add a new layer for the street-view video camera\n  map.addLayer({\n    id: \"mapillary-location\",\n    type: \"symbol\",\n    source: {\n      type: \"geojson\",\n      data: {\n        type: \"FeatureCollection\",\n        features: [],\n      },\n    },\n    layout: {\n      \"icon-rotate\": [\"get\", \"bearing\"],\n      \"icon-rotation-alignment\": \"map\",\n    },\n  });\n\n  map.loadImage(\"https://raw.githubusercontent.com/encharm/Font-Awesome-SVG-PNG/master/black/png/22/video-camera.png\", (error, image) => {\n    if (error) throw error;\n    map.addImage(\"video\", image);\n    map.setLayoutProperty(\"mapillary-location\", \"icon-image\", \"video\");\n  });\n\n  map.addLayer({\n    id: \"parcels\",\n    type: \"line\",\n    source: \"parcels\",\n    \"source-layer\": \"parcels\",\n    minzoom: 11,\n    layout: {\n      visibility: \"visible\",\n    },\n    paint: {\n      \"line-color\": {\n        stops: [\n          [14, \"#222\"],\n          [17, \"#333\"],\n          [17.1, \"#444\"],\n          [18, \"#333\"],\n        ],\n      },\n      \"line-width\": {\n        base: 1,\n        stops: [\n          [14, 0.1],\n          [17, 1],\n          [19, 4],\n        ],\n      },\n      \"line-opacity\": {\n        base: 1,\n        stops: [\n          [14, 0],\n          [14.1, 0.5],\n          [22, 1],\n        ],\n      },\n    },\n  });\n\n  map.addLayer({\n    id: \"parcels-highlight\",\n    type: \"line\",\n    source: \"parcels\",\n    \"source-layer\": \"parcels\",\n    minzoom: 15,\n    filter: [\"==\", \"parcelno\", \"\"],\n    layout: {\n      visibility: \"visible\",\n    },\n    paint: {\n      \"line-color\": \"#feb70d\",\n      \"line-width\": {\n        base: 1,\n        stops: [\n          [14, 2],\n          [15, 3],\n          [22, 10],\n        ],\n      },\n      \"line-opacity\": {\n        base: 1,\n        stops: [\n          [14, 0],\n          [14.1, 0.1],\n          [14.5, 1],\n          [22, 1],\n        ],\n      },\n    },\n  });\n\n  map.addLayer({\n    id: \"parcels-fill\",\n    type: \"fill\",\n    source: \"parcels\",\n    \"source-layer\": \"parcels\",\n    interactive: true,\n    minzoom: 12,\n    layout: {\n      visibility: \"visible\",\n    },\n    paint: {\n      \"fill-color\": \"rgba(0,0,0,0)\",\n    },\n  });\n};\n\nconst Map = ({ parcel, setParcel, coords, width, height, children, svCoords, svBearing }) => {\n  const [theMap, setTheMap] = useState(null);\n  let history = useHistory();\n\n  useEffect(() => {\n    var map = new mapboxgl.Map({\n      container: \"map\", // container id\n      style: mapStyle, // stylesheet location\n      center: coords ? [coords.y, coords.x] : [-83.0457, 42.331], // starting position [lng, lat]\n      zoom: 17.5, // starting zoom\n    });\n\n    map.resize();\n\n    map.on(\"load\", () => {\n      setTheMap(map);\n\n      addLayers(map);\n\n      map.on(\"click\", \"parcels-fill\", function (e) {\n        let parcel = map.queryRenderedFeatures(e.point, {\n          layers: [\"parcels-fill\"],\n        });\n        console.log(parcel)\n        setParcel(parcel[0].properties.parcelno);\n        history.push(`/${parcel[0].properties.parcelno}/`);\n        // setCoords(e.lngLat);\n      });\n    });\n  }, []);\n\n  //Highlight active parcel\n  useEffect(() => {\n    theMap && theMap.setFilter(\"parcels-highlight\", [\"==\", \"parcelno\", parcel ? parcel : \"\"]);\n  }, [parcel, theMap]);\n\n  //Highlight active parcel\n  useEffect(() => {\n    theMap && coords && theMap.panTo([coords.x, coords.y]);\n  }, [coords, theMap]);\n\n  useEffect(() => {\n    theMap && theMap.resize();\n  }, [width, height]);\n\n  useEffect(() => {\n    console.log(svCoords, svBearing);\n    theMap &&\n      theMap.getSource(\"mapillary-location\").setData({\n        type: \"FeatureCollection\",\n        // we'll make the map data here\n        features: [\n          {\n            type: \"Feature\",\n            geometry: {\n              type: \"Point\",\n              coordinates: [svCoords.lon, svCoords.lat],\n            },\n            properties: {\n              bearing: svBearing - 90,\n            },\n          },\n        ],\n      });\n  }, [svCoords, svBearing]);\n\n  return (\n    <section id=\"map\" className={`map-view mx-1 mt-1 rounded`}>\n      <MapTitleSection>\n        <MapTitle icon={faMapMarked}>Map</MapTitle>\n        {children}\n      </MapTitleSection>\n    </section>\n  );\n};\n\nexport default Map;\n","import { faCalendar, faCalendarAlt, faStreetView } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport bearing from \"@turf/bearing\";\nimport * as Mapillary from \"mapillary-js\";\nimport moment from \"moment\";\nimport React, { useEffect, useState } from \"react\";\n\nimport { MapTitle, MapTitleSection } from \"./MapHeader\";\n\nlet clientid = \"bmZxVGc0ODVBVXhZVk5FTDdyeHlhZzowM2EyODU0Njc4OWY3ZGNi\";\n\n/**\n * Wrap a value on the interval [min, max].\n */\nfunction wrap(value, min, max) {\n  var interval = max - min;\n\n  while (value > max || value < min) {\n    if (value > max) {\n      value = value - interval;\n    } else if (value < min) {\n      value = value + interval;\n    }\n  }\n\n  return value;\n}\n\n/**\n * Convert a desired bearing to a basic X image coordinate for\n * a specific node bearing.\n *\n * Works only for a full 360 panorama.\n */\nfunction bearingToBasic(desiredBearing, nodeBearing) {\n  // 1. Take difference of desired bearing and node bearing in degrees.\n  // 2. Scale to basic coordinates.\n  // 3. Add 0.5 because node bearing corresponds to the center\n  //    of the image. See\n  //    https://mapillary.github.io/mapillary-js/classes/viewer.html\n  //    for explanation of the basic coordinate system of an image.\n  var basic = (desiredBearing - nodeBearing) / 360 + 0.5;\n\n  // Wrap to a valid basic coordinate (on the [0, 1] interval).\n  // Needed when difference between desired bearing and node\n  // bearing is more than 180 degrees.\n  return wrap(basic, 0, 1);\n}\n\n/**\n * Function to set the mapillary viewer's center by computing bearing\n */\nfunction setBearing(node, mly, start, end) {\n  if (!node.fullPano) {\n    // We are only interested in setting the bearing for full 360 panoramas.\n    return;\n  }\n  var nodeBearing = node.computedCA; // Computed node compass angle (equivalent\n  // to bearing) is used by mjs when placing\n  // the node in 3D space.\n\n  // compute this with @turf/bearing\n  var desiredBearing = bearing(start, end); // Your desired bearing.\n\n  var basicX = bearingToBasic(desiredBearing, nodeBearing);\n  var basicY = 0.6; // tilt slight down\n\n  var center = [basicX, basicY];\n\n  mly.setCenter(center);\n}\n\n/**\n * Promise-returning function to fetch a new Mapillary imageKey based on some coordinates\n */\nconst fetchImageKey = (coords) => {\n  let lnglat;\n  if (coords.lng && coords.lat) {\n    lnglat = `${coords.lng},${coords.lat}`;\n  }\n  if (coords.x && coords.y) {\n    lnglat = `${coords.x},${coords.y}`;\n  }\n  let url = `https://a.mapillary.com/v3/images?client_id=${clientid}&closeto=${lnglat}&radius=80&usernames=codgis&start_time=2018-07-01`;\n  return fetch(url).then((r) => r.json());\n};\n\nlet markerStyle = {\n  ballColor: \"white\",\n  ballOpacity: 0.5,\n  color: \"#feb70d\",\n  opacity: 0.55,\n  interactive: false,\n  radius: 2,\n};\n\nconst StreetView = ({ coords, width, height, setSvBearing, setSvCoords, children }) => {\n  // local state to store the mapillary viewer\n  const [mapillary, setMapillary] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [currentCoords, setCurrentCoords] = useState(null);\n  const [currentKey, setCurrentKey] = useState(null);\n  const [imageKeys, setImageKeys] = useState(null);\n\n  // show full streetview on click of streetview button\n  useEffect(() => {\n    let mapillaryView = new Mapillary.Viewer(\"mly\", clientid, null, {\n      component: {\n        cover: true,\n        marker: true,\n        sequence: false,\n        cache: true,\n        attribution: false,\n        // direction: true\n      },\n    });\n\n    setMapillary(mapillaryView);\n\n    mapillaryView.on(\"nodechanged\", (n) => {\n      console.log(n.latLon);\n      setSvCoords(n.latLon);\n    });\n\n    mapillaryView.on(\"bearingchanged\", (b) => {\n      console.log(b);\n      setSvBearing(b);\n    });\n\n    if (coords !== currentCoords) {\n      setCurrentCoords(coords);\n      fetchImageKey(coords).then((d) => {\n        let sequences = [];\n        d.features.forEach((ik) => {\n          if (sequences.map((s) => s.properties.captured_at.slice(0, 10)).indexOf(ik.properties.captured_at.slice(0, 10)) === -1) {\n            sequences.push(ik);\n          }\n        });\n        let sorted = sequences.sort((a, b) => moment(a.properties.captured_at) - moment(b.properties.captured_at));\n        setImageKeys(sorted);\n        setCurrentKey(sorted[sorted.length - 1]);\n      });\n    }\n  }, []);\n\n  useEffect(() => {\n    setLoading(true);\n    mapillary &&\n      currentKey &&\n      mapillary.moveToKey(currentKey.properties.key).then((node) => {\n        setBearing(node, mapillary, currentKey.geometry.coordinates, [coords.lng || coords.x, coords.lat || coords.y]);\n        setLoading(false);\n      });\n  }, [currentKey]);\n\n  useEffect(() => {\n    if (mapillary) {\n      setLoading(true);\n      setImageKeys(null);\n      let defaultMarker = new Mapillary.MarkerComponent.SimpleMarker(\"default-id\", { lat: coords.y, lon: coords.x }, markerStyle);\n      let markerComponent = mapillary.getComponent(\"marker\");\n      markerComponent.add([defaultMarker]);\n      fetchImageKey(coords).then((d) => {\n        let sequences = [];\n        d.features.forEach((ik) => {\n          if (sequences.map((s) => s.properties.captured_at.slice(0, 10)).indexOf(ik.properties.captured_at.slice(0, 10)) === -1) {\n            sequences.push(ik);\n          }\n        });\n        let sorted = sequences.sort((a, b) => moment(a.properties.captured_at) - moment(b.properties.captured_at));\n        setImageKeys(sorted);\n        setCurrentKey(sorted[sorted.length - 1]);\n      });\n    }\n  }, [coords]);\n\n  useEffect(() => {\n    if (mapillary) {\n      mapillary.resize();\n    }\n  }, [width, height]);\n\n  return (\n    <section id=\"mly\" className=\"street-view mx-1 mt-1 rounded\">\n      <MapTitleSection>\n        <MapTitle icon={faStreetView}>{loading ? `Loading imagery...` : `Street view`}</MapTitle>\n        {imageKeys && currentKey && (\n          <div className=\"flex items-center\">\n            <FontAwesomeIcon icon={faCalendarAlt} className=\"text-md mr-2\" />\n            <select\n              className=\"block appearance-none text-xs mr-3 px-2 py-1 bg-det-gray border border-gray-200 text-gray-700 rounded leading-tight focus:outline-none focus:bg-white focus:border-gray-500\"\n              value={moment(currentKey.properties.captured_at).format(\"ll\")}\n              onChange={(e) => {\n                setCurrentKey(imageKeys.filter((s) => moment(s.properties.captured_at).format(\"ll\") === e.target.value)[0]);\n              }}\n            >\n              {imageKeys.map((s, i) => (\n                <option key={s.properties.key}>{moment(s.properties.captured_at).format(\"ll\")}</option>\n              ))}\n            </select>\n            {children}\n          </div>\n        )}\n      </MapTitleSection>\n    </section>\n  );\n};\n\nexport default StreetView;\n","import React from 'react'\nimport StreetView from './StreetView'\nimport {HeaderButton} from './HeaderButton'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faStreetView, faMapMarked } from '@fortawesome/free-solid-svg-icons'\n\nconst SVToggle = ({setMap, map, parcel}) => (\n  <HeaderButton icon={map ? faStreetView : faMapMarked}\n    onClick={() => parcel && setMap(!map)}\n    />\n)\n\nexport default SVToggle","import \"./css/App.css\";\n\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nimport AddressSearch from \"./components/AddressSearch.js\";\nimport Details from \"./components/Details\";\nimport Header from \"./components/Header\";\nimport Introduction from \"./components/Introduction\";\nimport Map from \"./components/Map\";\nimport StreetView from \"./components/StreetView\";\nimport SVToggle from \"./components/SVToggle\";\n\nconst ParcelExplorer = () => {\n  // get the parcel ID from the URL\n  let { pid } = useParams();\n\n  // screen size hooks: we need to change behavior for mobile/etc\n  const breakpoint = 640;\n  const [width, setWidth] = useState(window.innerWidth);\n  const [height, setHeight] = useState(window.innerHeight);\n  const [mobile, setMobile] = useState(width < breakpoint);\n\n  // app state\n  const [parcel, setParcel] = useState(pid ? pid : null);\n  const [coords, setCoords] = useState(null);\n  const [map, setMap] = useState(true);\n  const [svCoords, setSvCoords] = useState(null);\n  const [svBearing, setSvBearing] = useState(null);\n  const [showInfo, setInfo] = useState(mobile ? false : true)\n  const [showSearch, setSearch] = useState(mobile ? false : true)\n\n  // TODO\n  const basemaps = {\n    Streets: \"mapbox://styles/cityofdetroit/cke9czg0d5wfq1atbqtbwbt9e\",\n    Satellite: \"mapbox://styles/mapbox/satellite-v9\",\n  };\n  const [basemap, setBasemap] = useState(basemaps.Streets);\n\n  // Roll our own media-query hook:\n  useEffect(() => {\n    const handleWindowResize = () => {\n      setWidth(window.innerWidth);\n      setHeight(window.innerHeight);\n      setMobile(window.innerWidth < breakpoint);\n    };\n    window.addEventListener(\"resize\", handleWindowResize);\n    return () => window.removeEventListener(\"resize\", handleWindowResize);\n  }, []);\n\n  return (\n    <div className={!mobile ? \"App\" : \"MobileApp\"}>\n      <Header {...{setSearch, showSearch, showInfo, setInfo, setParcel, mobile}}>\n        {showInfo && <Introduction {...{setInfo, showInfo}}/>}\n        {showSearch && <AddressSearch {...{ parcel, setParcel, setCoords, setSearch, showSearch }} />}\n      </Header>\n      <div id=\"sidebar\">\n        {parcel && <Details {...{ parcel, setCoords, mobile }} />}\n      </div>\n      {((mobile && map) || !mobile) && (\n        <Map {...{ parcel, setParcel, width, basemap, coords, svCoords, svBearing }}>{mobile && map && <SVToggle {...{ setMap, map, parcel }} />}</Map>\n      )}\n      {((mobile && !map) || !mobile) && coords && (\n        <StreetView {...{ coords, width, height, setSvBearing, setSvCoords }}>{mobile && !map && <SVToggle {...{ setMap, map, parcel }} />}</StreetView>\n      )}\n    </div>\n  );\n};\n\nexport default ParcelExplorer;\n","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport ParcelExplorer from './ParcelExplorer';\n\nexport default function App() {\n  return (\n    <Router basename='/parcel-explorer'>\n        {/* A <Switch> looks through its children <Route>s and\n            renders the first one that matches the current URL. */}\n        <Switch>\n          <Route path=\"/:pid\" children={<ParcelExplorer />} />\n          <Route path=\"/\">\n            <ParcelExplorer />\n          </Route>\n        </Switch>\n    </Router>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import \"./tailwind.output.css\";\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}